import pandas as pd
from datetime import datetime, timedelta
from Functions import time_step


def get_calving_events():
    loc = "./Calving_events"
    df_Calve = pd.read_csv("./Calving_events/calving_events.csv", index_col=0)
    df_Calve["Datetime_obj"] = (pd.to_datetime(df_Calve['Datetime_obj'], format="%Y-%m-%d %H:%M:%S"))
    df_earthquake = pd.read_csv("./Calving_events/earthquake_events.csv", index_col=0)
    df_earthquake["datetime"] = (pd.to_datetime(df_earthquake['datetime'], format="%Y-%m-%d %H:%M:%S"))
    df_quake = pd.read_csv("./Calving_events/quake2_events.csv", index_col=0)
    df_quake["datetime"] = (pd.to_datetime(df_quake['datetime'], format="%Y-%m-%d %H:%M:%S"))
    merged_df = pd.merge(df_earthquake, df_quake, how="outer", on="datetime")
    return merged_df, df_Calve


def get_df(node):
    node_loc = f"./Filtered_Nodes"

    df = pd.read_csv(f"{node_loc}/{node}_5e-20_50.csv", index_col=0)
    df["datetime"] = pd.to_datetime(df['datetime'], format="%Y-%m-%d %H:%M:%S")

    df_h, df_speed = df, time_step.get_5min_gap(df, 20)

    df_h = check_removal(df_h, node, "height")
    df_speed = check_removal(df_speed, node, "flow_speed")

    df_h = df_h[df_h["5mins_time_gap"] == 0.0]
    df_speed = df_speed[df_speed["5mins_time_gap"] == 0.0]

    df_merged = pd.DataFrame()
    df_merged["datetime"] = df["datetime"]
    df_merged["height"] = df["height"]
    df_merged["kf_height"] = df["kf_height"]
    df_merged["kf_height_5min"] = df_h["kf_height"]
    df_merged["kf_easting_5min"] = df_h["kf_easting"]
    df_merged["kf_northing_5min"] = df_h["kf_northing"]

    df_merged["north_east_speed_mpd"] = df["north_east_speed_mpd"]
    df_merged["north_east_speed_mpd_20_min"] = df_speed["north_east_speed_mpd"]

    return df_merged, df


def check_removal(df_, node, h_or_f):
    df_period = df_
    if h_or_f == "height":
        drop_ls_height = {
            "Node0001": [["2013-07-11 00:00:00", "2013-07-12 00:15:00"],
                         ["2013-07-15 00:00:00", "2013-07-16 00:45:00"]],
            "Node0002": [["2013-07-13 23:59:00", "2013-07-14 00:15:00"], ["2013-07-15 16:00:00", "2013-07-16 00:15:00"],
                         ["2013-07-22 12:00:00", "2013-07-26 00:00:00"]],
            "Node0003": [["2013-07-13 23:59:52", "2013-07-14 00:30:00"], ["2013-07-15 23:00:00", "2013-07-16 02:00:00"],
                         ["2013-08-24 04:00:00", "2013-08-24 13:00:00"]],
            "Node0004": [["2013-07-12 23:59:45", "2013-07-13 00:10:00"],
                         ["2013-07-22 15:00:00", "2013-08-01 20:00:00"]],
            "Node0005": [["2013-07-12 00:40:00", "2013-07-12 00:50:00"]],
            "Node0006": [["2013-07-12 23:59:00", "2013-07-13 00:12:00"],
                         ["2013-07-13 06:46:00", "2013-07-13 07:07:00"]],
            "Node0007": [["2013-07-11 23:59:00", "2013-07-12 00:10:00"],
                         ["2013-07-15 04:00:00", "2013-07-16 01:00:00"]],
            "Node0008": [["2013-07-13 23:59:00", "2013-07-14 00:20:00"], ["2013-08-24 02:00:00", "2013-08-24 12:00:00"],
                         ["2013-08-28 04:00:00", "2013-08-28 10:50:00"]],
            "Node0009": [["2013-07-11 23:59:00", "2013-07-12 00:01:00"]],
            "Node0010": [["2013-07-12 23:59:00", "2013-07-13 00:22:00"]],
            "Node0011": [["2013-07-10 00:00:00", "2013-07-16 00:20:00"], ["2013-07-12 20:30:00", "2013-07-13 00:00:00"],
                         ["2013-07-15 16:00:00", "2013-07-16 00:05:00"]],
            "Node0012": [["2013-07-12 23:59:48", "2013-07-13 00:13:00"], ["2013-07-22 18:00:00", "2013-07-26 01:00:00"]],
            "Node0013": [["2013-07-15 13:34:00", "2013-07-16 02:00:00"],
                         ["2013-08-21 00:00:00", "2013-08-28 17:30:00"]],
            "Node0014": [["2013-07-15 18:28:00", "2013-07-15 19:10:00"],
                         ["2013-08-03 14:00:00", "2013-08-03 15:08:40"]],
            "Node0015": [["2013-07-12 16:33:00", "2013-07-13 00:00:00"]],
            "Node0017": [["2013-07-15 23:59:00", "2013-07-16 00:10:00"],
                         ["2013-07-26 22:00:00", "2013-07-26 23:57:10"]],
            "Node0018": [["2013-07-16 23:59:00", "2013-07-17 00:12:00"],
                         ["2013-08-21 14:00:00", "2013-08-21 16:59:40"]],
            "Node0019": [["2013-07-12 16:35:00", "2013-07-12 16:46:00"]],
            "Node0020": [["2013-07-12 16:35:00", "2013-07-12 16:50:00"]],
        }
        for data in drop_ls_height[node]:
            df_period = df_period[(df_period['datetime'] < data[0]) | (df_period['datetime'] > data[1])]
    elif h_or_f == "flow_speed":
        drop_ls_flow = {
            "Node0001": [["2013-07-11 00:00:00", "2013-07-12 05:00:00"], ["2013-07-15 14:00:00", "2013-07-16 04:00:00"]],
            "Node0002": [["2013-07-13 23:59:00", "2013-07-14 03:00:00"], ["2013-07-15 12:00:00", "2013-07-16 04:00:00"],
                         ["2013-07-20 20:00:00", "2013-07-26 07:00:00"]],
            "Node0003": [["2013-07-10 23:59:52", "2013-07-14 05:00:00"], ["2013-07-15 23:00:00", "2013-07-16 02:00:00"],
                         ["2013-08-24 04:00:00", "2013-08-24 13:00:00"]],
            "Node0004": [["2013-07-12 00:00:00", "2013-07-13 03:10:00"],
                         ["2013-07-22 10:20:30", "2013-08-25 04:46:00"]],
            "Node0005": [["2013-07-10 00:00:00", "2013-07-12 20:00:00"], ["2013-07-15 16:50:00", "2013-07-15 23:30:00"],
                         ["2013-07-16 05:30:00", "2013-07-16 07:00:00"]],
            "Node0006": [["2013-07-12 00:00:00", "2013-07-13 04:50:00"], ["2013-07-13 06:46:00", "2013-07-13 07:06:00"],
                         ["2013-07-15 06:29:00", "2013-07-15 21:10:00"]],
            "Node0007": [["2013-07-11 00:00:00", "2013-07-12 05:00:00"], ["2013-07-15 01:00:00", "2013-07-16 03:00:00"],
                         ["2013-08-01 21:00:00", "2013-08-20 00:00:00"]],
            "Node0008": [["2013-07-12 00:00:00", "2013-07-14 05:00:00"], ["2013-07-16 06:39:00", "2013-07-16 07:00:00"],
                         ["2013-08-24 02:00:00", "2013-08-24 04:00:00"],
                         ["2013-08-28 00:00:00", "2013-08-29 04:00:00"]],
            "Node0009": [["2013-07-11 00:00:00", "2013-07-12 03:00:00"]],
            "Node0010": [["2013-07-11 00:00:00", "2013-07-13 05:20:00"], ["2013-07-21 23:00:00", "2013-08   -13 05:20:00"]],
            "Node0011": [["2013-07-10 00:00:00", "2013-07-16 00:20:00"]],
            "Node0012": [["2013-07-11 00:00:00", "2013-07-13 07:00:00"],
                         ["2013-07-22 18:00:00", "2013-07-26 01:00:00"]],
            "Node0013": [["2013-07-11 00:00:00", "2013-07-16 03:00:00"], ["2013-08-04 17:40:00", "2013-08-05 03:00:00"],
                         ["2013-08-21 14:00:00", "2013-09-01 04:00:00"]],
            "Node0014": [["2013-07-11 00:00:00", "2013-07-15 20:30:00"],
                         ["2013-08-01 11:00:00", "2013-09-01 04:00:00"]],
            "Node0015": [["2013-07-10 00:00:00", "2013-07-12 21:00:00"]],
            "Node0017": [["2013-07-10 00:00:00", "2013-07-16 05:00:00"],
                         ["2013-07-23 10:00:00", "2013-07-27 01:00:00"]],
            "Node0018": [["2013-07-10 00:00:00", "2013-07-17 05:20:00"],
                         ["2013-08-01 00:00:00", "2013-09-01 01:00:00"]],
            "Node0019": [["2013-07-10 10:00:00", "2013-07-13 00:00:00"], ["2013-07-18 20:00:00", "2013-07-19 04:44:00"]],
            "Node0020": [["2013-07-10 10:00:00", "2013-07-13 00:00:00"], ["2013-07-14 00:00:00", "2013-07-14 02:00:00"]],
        }

        for data in drop_ls_flow[node]:
            df_period = df_period[(df_period['datetime'] < data[0]) | (df_period['datetime'] > data[1])]
    return df_period



